steps:
  # Provision clusters if need to
  - name: 'gcr.io/cloud-builders/gcloud'
    id: build-applications
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      cd demo && skaffold build -f=skaffold.yaml


  - name: 'gcr.io/cloud-builders/gcloud'
    id: provison-redis
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      export region=${_CUSTOM_REGION}
      export redis_instance_name=${_REDIS_INSTANCE_NAME}
      cd hack && ./redis.sh ${region} ${redis_instance_name}


  - name: 'gcr.io/cloud-builders/gcloud'
    id: provision-serverless-connector
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      export project_id=${PROJECT_ID}
      export region=${_CUSTOM_REGION}
      export vpc_network=${_VPC_NETWORK}
      export serverless_connector=${_SERVERLESS_CONNECTOR}
      cd hack && ./vpc-connector.sh ${region} ${vpc_network} ${serverless_connector}


  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy-applications2run
    entrypoint: 'bash'
    args:
    - '-eEuo'
    - 'pipefail'
    - '-c'
    - |-
      export project_id=${PROJECT_ID}
      export region=${_CUSTOM_REGION}
      export vpc_network=${_VPC_NETWORK}
      export serverless_connector=${_SERVERLESS_CONNECTOR}
      export redis_instance_name=${_REDIS_INSTANCE_NAME}
      curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 > /bin/jq && chmod +x /bin/jq
      cd hack && ./deploy2run.sh

timeout: 7200s
substitutions:
    _CUSTOM_REGION: asia-east2
    _VPC_NETWORK: custom-vpc-1
    _REDIS_INSTANCE_NAME: redis4cart
    _SERVERLESS_CONNECTOR: vpc-connector-cloudrun
options:
  dynamicSubstitutions: true
  substitution_option: 'ALLOW_LOOSE'
